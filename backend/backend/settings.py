"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import sys
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-p2zll*sbza3#bc0ciwz(hjc5ikd8y8fwjs*xtkz*hvu+70^-)e'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin', 
    'django.contrib.auth',
    'users',
    'enroll',
    'exercise',
    'quizanswers',
    'quizquestions',
    'resources',
    'resources_types',
    'roadmaps',
    'topic_roadmaps',
    'topics',
    'user_topic_progresses',
    'UserVisitLog',
    'translate',
    'django_extensions',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'rest_framework_simplejwt'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'users.middleware.AuthMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',  # Thêm đường dẫn tới thư mục templates của bạn
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),  # Thời gian sống của access token
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),    # Thời gian sống của refresh token
    'ROTATE_REFRESH_TOKENS': False,                  # Không tự động làm mới refresh token
    'BLACKLIST_AFTER_ROTATION': False,               # Không hủy refresh token sau khi làm mới
}


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'IT_ROADMAP',  # Tên database MySQL
        'USER': 'root',        # Username MySQL
        'PASSWORD': '12345',  # Mật khẩu MySQL
        'HOST': '127.0.0.1',   # Nếu dùng máy chủ từ xa, nhập IP tại đây
        'PORT': '3306',        # Cổng mặc định của MySQL
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{asctime} {levelname} [{name}] {message}',
            'style': '{',
        },
        'simple': {
            'format': '{asctime} {levelname} {message}',  # Định dạng đơn giản
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',  # Giảm mức độ log xuống INFO, chỉ ghi những log quan trọng
            'class': 'logging.FileHandler',
            'filename': 'django.log',  # Lưu log vào file này
            'formatter': 'simple',
        },
        'console': {
            'level': 'WARNING',  # Cũng chỉ ghi các log từ INFO trở lên
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',  # Chỉ ghi log từ mức INFO trở lên
            'propagate': False,
        },
        'django.db.backends': {
            'handlers': ['file', 'console'],
            'level': 'INFO',  # Giảm log mức DEBUG từ DB backend
            'propagate': False,
        },
        'users.middleware': {  # Đặc biệt cho middleware của bạn
            'handlers': ['file', 'console'],
            'level': 'INFO',  # Chỉ ghi log quan trọng của middleware
            'propagate': False,
        },
        '': {
            'handlers': ['file', 'console'],
            'level': 'INFO',  # Log ở mức độ thông tin chung
            'propagate': True,
        },
    },
}





# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

CORS_ALLOW_ALL_ORIGINS = True

DEBUG = True

# Tắt CSRF protection cho API views
CSRF_COOKIE_SECURE = False

CSRF_COOKIE_HTTPONLY = False  # Allow JavaScript to read the CSRF cookie
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
]
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Ví dụ: nếu dùng Gmail
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'team3.e2202@gmail.com'  # Thay bằng email của bạn
EMAIL_HOST_PASSWORD = 'boem gcin fxhz nqsa'  # Thay bằng mật khẩu email của bạn

DEFAULT_FROM_EMAIL = 'noreply@yourdomain.com'  # Địa chỉ email gửi đi
FRONTEND_URL = 'http://localhost:3000'  # Hoặc URL frontend của bạn


import cloudinary

CLOUDINARY_STORAGE = {
    'CLOUD_NAME': 'dsm1uhecl',
    'API_KEY': '118225892873696',
    'API_SECRET': 'Ks-yVnCE9rmTML5wOPmYmoozy74',
}

cloudinary.config(
    cloud_name=CLOUDINARY_STORAGE['CLOUD_NAME'],
    api_key=CLOUDINARY_STORAGE['API_KEY'],
    api_secret=CLOUDINARY_STORAGE['API_SECRET']
)

import os
GOOGLE_APPLICATION_CREDENTIALS = os.path.join(BASE_DIR, 'credentials.json')
os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = GOOGLE_APPLICATION_CREDENTIALS